//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AcumaticaDeployer.ServiceGate {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceGateSoap", Namespace="http://acumatica.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RowServerStub))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(View[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class ServiceGate : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumTablesExOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumGraphsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportEnumNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportEnumTableNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportGetXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportGetVersionXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportSaveVersionXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportSaveExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportGetPreviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetBusinessDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback PublishPackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanupPublishOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnpublishAllPackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginExOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceGate() {
            this.Url = global::AcumaticaDeployer.Properties.Settings.Default.AcumaticaDeployer_ServiceGate_ServiceGate;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ProcessCompletedEventHandler ProcessCompleted;
        
        /// <remarks/>
        public event ProcessBatchCompletedEventHandler ProcessBatchCompleted;
        
        /// <remarks/>
        public event EnumTablesCompletedEventHandler EnumTablesCompleted;
        
        /// <remarks/>
        public event EnumTablesExCompletedEventHandler EnumTablesExCompleted;
        
        /// <remarks/>
        public event EnumGraphsCompletedEventHandler EnumGraphsCompleted;
        
        /// <remarks/>
        public event ReportEnumNamesCompletedEventHandler ReportEnumNamesCompleted;
        
        /// <remarks/>
        public event ReportEnumTableNamesCompletedEventHandler ReportEnumTableNamesCompleted;
        
        /// <remarks/>
        public event ReportGetXmlCompletedEventHandler ReportGetXmlCompleted;
        
        /// <remarks/>
        public event ReportGetVersionXmlCompletedEventHandler ReportGetVersionXmlCompleted;
        
        /// <remarks/>
        public event ReportSaveCompletedEventHandler ReportSaveCompleted;
        
        /// <remarks/>
        public event ReportSaveVersionXmlCompletedEventHandler ReportSaveVersionXmlCompleted;
        
        /// <remarks/>
        public event ReportSaveExCompletedEventHandler ReportSaveExCompleted;
        
        /// <remarks/>
        public event ReportGetPreviewCompletedEventHandler ReportGetPreviewCompleted;
        
        /// <remarks/>
        public event SetBusinessDateCompletedEventHandler SetBusinessDateCompleted;
        
        /// <remarks/>
        public event UploadPackageCompletedEventHandler UploadPackageCompleted;
        
        /// <remarks/>
        public event PublishPackagesCompletedEventHandler PublishPackagesCompleted;
        
        /// <remarks/>
        public event CleanupPublishCompletedEventHandler CleanupPublishCompleted;
        
        /// <remarks/>
        public event UnpublishAllPackagesCompletedEventHandler UnpublishAllPackagesCompleted;
        
        /// <remarks/>
        public event GetPackageCompletedEventHandler GetPackageCompleted;
        
        /// <remarks/>
        public event LoginExCompletedEventHandler LoginExCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/Process", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GraphObject Process(GraphObject Request) {
            object[] results = this.Invoke("Process", new object[] {
                        Request});
            return ((GraphObject)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessAsync(GraphObject Request) {
            this.ProcessAsync(Request, null);
        }
        
        /// <remarks/>
        public void ProcessAsync(GraphObject Request, object userState) {
            if ((this.ProcessOperationCompleted == null)) {
                this.ProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessOperationCompleted);
            }
            this.InvokeAsync("Process", new object[] {
                        Request}, this.ProcessOperationCompleted, userState);
        }
        
        private void OnProcessOperationCompleted(object arg) {
            if ((this.ProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessCompleted(this, new ProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/ProcessBatch", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GraphObject[] ProcessBatch(GraphObject[] requests) {
            object[] results = this.Invoke("ProcessBatch", new object[] {
                        requests});
            return ((GraphObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ProcessBatchAsync(GraphObject[] requests) {
            this.ProcessBatchAsync(requests, null);
        }
        
        /// <remarks/>
        public void ProcessBatchAsync(GraphObject[] requests, object userState) {
            if ((this.ProcessBatchOperationCompleted == null)) {
                this.ProcessBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessBatchOperationCompleted);
            }
            this.InvokeAsync("ProcessBatch", new object[] {
                        requests}, this.ProcessBatchOperationCompleted, userState);
        }
        
        private void OnProcessBatchOperationCompleted(object arg) {
            if ((this.ProcessBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessBatchCompleted(this, new ProcessBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/EnumTables", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] EnumTables() {
            object[] results = this.Invoke("EnumTables", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumTablesAsync() {
            this.EnumTablesAsync(null);
        }
        
        /// <remarks/>
        public void EnumTablesAsync(object userState) {
            if ((this.EnumTablesOperationCompleted == null)) {
                this.EnumTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumTablesOperationCompleted);
            }
            this.InvokeAsync("EnumTables", new object[0], this.EnumTablesOperationCompleted, userState);
        }
        
        private void OnEnumTablesOperationCompleted(object arg) {
            if ((this.EnumTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumTablesCompleted(this, new EnumTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/EnumTablesEx", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] EnumTablesEx() {
            object[] results = this.Invoke("EnumTablesEx", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumTablesExAsync() {
            this.EnumTablesExAsync(null);
        }
        
        /// <remarks/>
        public void EnumTablesExAsync(object userState) {
            if ((this.EnumTablesExOperationCompleted == null)) {
                this.EnumTablesExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumTablesExOperationCompleted);
            }
            this.InvokeAsync("EnumTablesEx", new object[0], this.EnumTablesExOperationCompleted, userState);
        }
        
        private void OnEnumTablesExOperationCompleted(object arg) {
            if ((this.EnumTablesExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumTablesExCompleted(this, new EnumTablesExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/EnumGraphs", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] EnumGraphs() {
            object[] results = this.Invoke("EnumGraphs", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumGraphsAsync() {
            this.EnumGraphsAsync(null);
        }
        
        /// <remarks/>
        public void EnumGraphsAsync(object userState) {
            if ((this.EnumGraphsOperationCompleted == null)) {
                this.EnumGraphsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumGraphsOperationCompleted);
            }
            this.InvokeAsync("EnumGraphs", new object[0], this.EnumGraphsOperationCompleted, userState);
        }
        
        private void OnEnumGraphsOperationCompleted(object arg) {
            if ((this.EnumGraphsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumGraphsCompleted(this, new EnumGraphsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/ReportEnumNames", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ReportEnumNames() {
            object[] results = this.Invoke("ReportEnumNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportEnumNamesAsync() {
            this.ReportEnumNamesAsync(null);
        }
        
        /// <remarks/>
        public void ReportEnumNamesAsync(object userState) {
            if ((this.ReportEnumNamesOperationCompleted == null)) {
                this.ReportEnumNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportEnumNamesOperationCompleted);
            }
            this.InvokeAsync("ReportEnumNames", new object[0], this.ReportEnumNamesOperationCompleted, userState);
        }
        
        private void OnReportEnumNamesOperationCompleted(object arg) {
            if ((this.ReportEnumNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportEnumNamesCompleted(this, new ReportEnumNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/ReportEnumTableNames", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ReportEnumTableNames(string fullName) {
            object[] results = this.Invoke("ReportEnumTableNames", new object[] {
                        fullName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportEnumTableNamesAsync(string fullName) {
            this.ReportEnumTableNamesAsync(fullName, null);
        }
        
        /// <remarks/>
        public void ReportEnumTableNamesAsync(string fullName, object userState) {
            if ((this.ReportEnumTableNamesOperationCompleted == null)) {
                this.ReportEnumTableNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportEnumTableNamesOperationCompleted);
            }
            this.InvokeAsync("ReportEnumTableNames", new object[] {
                        fullName}, this.ReportEnumTableNamesOperationCompleted, userState);
        }
        
        private void OnReportEnumTableNamesOperationCompleted(object arg) {
            if ((this.ReportEnumTableNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportEnumTableNamesCompleted(this, new ReportEnumTableNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/ReportGetXml", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReportGetXml(string name) {
            object[] results = this.Invoke("ReportGetXml", new object[] {
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReportGetXmlAsync(string name) {
            this.ReportGetXmlAsync(name, null);
        }
        
        /// <remarks/>
        public void ReportGetXmlAsync(string name, object userState) {
            if ((this.ReportGetXmlOperationCompleted == null)) {
                this.ReportGetXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportGetXmlOperationCompleted);
            }
            this.InvokeAsync("ReportGetXml", new object[] {
                        name}, this.ReportGetXmlOperationCompleted, userState);
        }
        
        private void OnReportGetXmlOperationCompleted(object arg) {
            if ((this.ReportGetXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportGetXmlCompleted(this, new ReportGetXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/ReportGetVersionXml", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReportGetVersionXml(string name, int ver) {
            object[] results = this.Invoke("ReportGetVersionXml", new object[] {
                        name,
                        ver});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReportGetVersionXmlAsync(string name, int ver) {
            this.ReportGetVersionXmlAsync(name, ver, null);
        }
        
        /// <remarks/>
        public void ReportGetVersionXmlAsync(string name, int ver, object userState) {
            if ((this.ReportGetVersionXmlOperationCompleted == null)) {
                this.ReportGetVersionXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportGetVersionXmlOperationCompleted);
            }
            this.InvokeAsync("ReportGetVersionXml", new object[] {
                        name,
                        ver}, this.ReportGetVersionXmlOperationCompleted, userState);
        }
        
        private void OnReportGetVersionXmlOperationCompleted(object arg) {
            if ((this.ReportGetVersionXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportGetVersionXmlCompleted(this, new ReportGetVersionXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/ReportSave", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReportSave(string name, string xml) {
            this.Invoke("ReportSave", new object[] {
                        name,
                        xml});
        }
        
        /// <remarks/>
        public void ReportSaveAsync(string name, string xml) {
            this.ReportSaveAsync(name, xml, null);
        }
        
        /// <remarks/>
        public void ReportSaveAsync(string name, string xml, object userState) {
            if ((this.ReportSaveOperationCompleted == null)) {
                this.ReportSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportSaveOperationCompleted);
            }
            this.InvokeAsync("ReportSave", new object[] {
                        name,
                        xml}, this.ReportSaveOperationCompleted, userState);
        }
        
        private void OnReportSaveOperationCompleted(object arg) {
            if ((this.ReportSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportSaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/ReportSaveVersionXml", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReportSaveVersionXml(string name, int ver, string xml) {
            this.Invoke("ReportSaveVersionXml", new object[] {
                        name,
                        ver,
                        xml});
        }
        
        /// <remarks/>
        public void ReportSaveVersionXmlAsync(string name, int ver, string xml) {
            this.ReportSaveVersionXmlAsync(name, ver, xml, null);
        }
        
        /// <remarks/>
        public void ReportSaveVersionXmlAsync(string name, int ver, string xml, object userState) {
            if ((this.ReportSaveVersionXmlOperationCompleted == null)) {
                this.ReportSaveVersionXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportSaveVersionXmlOperationCompleted);
            }
            this.InvokeAsync("ReportSaveVersionXml", new object[] {
                        name,
                        ver,
                        xml}, this.ReportSaveVersionXmlOperationCompleted, userState);
        }
        
        private void OnReportSaveVersionXmlOperationCompleted(object arg) {
            if ((this.ReportSaveVersionXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportSaveVersionXmlCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/ReportSaveEx", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReportSaveEx(string name, string xml, bool createVersion, string versionDescription) {
            this.Invoke("ReportSaveEx", new object[] {
                        name,
                        xml,
                        createVersion,
                        versionDescription});
        }
        
        /// <remarks/>
        public void ReportSaveExAsync(string name, string xml, bool createVersion, string versionDescription) {
            this.ReportSaveExAsync(name, xml, createVersion, versionDescription, null);
        }
        
        /// <remarks/>
        public void ReportSaveExAsync(string name, string xml, bool createVersion, string versionDescription, object userState) {
            if ((this.ReportSaveExOperationCompleted == null)) {
                this.ReportSaveExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportSaveExOperationCompleted);
            }
            this.InvokeAsync("ReportSaveEx", new object[] {
                        name,
                        xml,
                        createVersion,
                        versionDescription}, this.ReportSaveExOperationCompleted, userState);
        }
        
        private void OnReportSaveExOperationCompleted(object arg) {
            if ((this.ReportSaveExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportSaveExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/ReportGetPreview", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReportGetPreview(string xml, int topCount) {
            object[] results = this.Invoke("ReportGetPreview", new object[] {
                        xml,
                        topCount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReportGetPreviewAsync(string xml, int topCount) {
            this.ReportGetPreviewAsync(xml, topCount, null);
        }
        
        /// <remarks/>
        public void ReportGetPreviewAsync(string xml, int topCount, object userState) {
            if ((this.ReportGetPreviewOperationCompleted == null)) {
                this.ReportGetPreviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportGetPreviewOperationCompleted);
            }
            this.InvokeAsync("ReportGetPreview", new object[] {
                        xml,
                        topCount}, this.ReportGetPreviewOperationCompleted, userState);
        }
        
        private void OnReportGetPreviewOperationCompleted(object arg) {
            if ((this.ReportGetPreviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportGetPreviewCompleted(this, new ReportGetPreviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/SetBusinessDate", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetBusinessDate(System.DateTime date) {
            this.Invoke("SetBusinessDate", new object[] {
                        date});
        }
        
        /// <remarks/>
        public void SetBusinessDateAsync(System.DateTime date) {
            this.SetBusinessDateAsync(date, null);
        }
        
        /// <remarks/>
        public void SetBusinessDateAsync(System.DateTime date, object userState) {
            if ((this.SetBusinessDateOperationCompleted == null)) {
                this.SetBusinessDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBusinessDateOperationCompleted);
            }
            this.InvokeAsync("SetBusinessDate", new object[] {
                        date}, this.SetBusinessDateOperationCompleted, userState);
        }
        
        private void OnSetBusinessDateOperationCompleted(object arg) {
            if ((this.SetBusinessDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBusinessDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/UploadPackage", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadPackage(string packageName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] packageContents, bool replaceIfPackageExists) {
            this.Invoke("UploadPackage", new object[] {
                        packageName,
                        packageContents,
                        replaceIfPackageExists});
        }
        
        /// <remarks/>
        public void UploadPackageAsync(string packageName, byte[] packageContents, bool replaceIfPackageExists) {
            this.UploadPackageAsync(packageName, packageContents, replaceIfPackageExists, null);
        }
        
        /// <remarks/>
        public void UploadPackageAsync(string packageName, byte[] packageContents, bool replaceIfPackageExists, object userState) {
            if ((this.UploadPackageOperationCompleted == null)) {
                this.UploadPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadPackageOperationCompleted);
            }
            this.InvokeAsync("UploadPackage", new object[] {
                        packageName,
                        packageContents,
                        replaceIfPackageExists}, this.UploadPackageOperationCompleted, userState);
        }
        
        private void OnUploadPackageOperationCompleted(object arg) {
            if ((this.UploadPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadPackageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/PublishPackages", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PublishPackages(string[] packageNames, bool mergeWithExistingPackages) {
            this.Invoke("PublishPackages", new object[] {
                        packageNames,
                        mergeWithExistingPackages});
        }
        
        /// <remarks/>
        public void PublishPackagesAsync(string[] packageNames, bool mergeWithExistingPackages) {
            this.PublishPackagesAsync(packageNames, mergeWithExistingPackages, null);
        }
        
        /// <remarks/>
        public void PublishPackagesAsync(string[] packageNames, bool mergeWithExistingPackages, object userState) {
            if ((this.PublishPackagesOperationCompleted == null)) {
                this.PublishPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPublishPackagesOperationCompleted);
            }
            this.InvokeAsync("PublishPackages", new object[] {
                        packageNames,
                        mergeWithExistingPackages}, this.PublishPackagesOperationCompleted, userState);
        }
        
        private void OnPublishPackagesOperationCompleted(object arg) {
            if ((this.PublishPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PublishPackagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/CleanupPublish", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CleanupPublish() {
            this.Invoke("CleanupPublish", new object[0]);
        }
        
        /// <remarks/>
        public void CleanupPublishAsync() {
            this.CleanupPublishAsync(null);
        }
        
        /// <remarks/>
        public void CleanupPublishAsync(object userState) {
            if ((this.CleanupPublishOperationCompleted == null)) {
                this.CleanupPublishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanupPublishOperationCompleted);
            }
            this.InvokeAsync("CleanupPublish", new object[0], this.CleanupPublishOperationCompleted, userState);
        }
        
        private void OnCleanupPublishOperationCompleted(object arg) {
            if ((this.CleanupPublishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanupPublishCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/UnpublishAllPackages", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnpublishAllPackages() {
            this.Invoke("UnpublishAllPackages", new object[0]);
        }
        
        /// <remarks/>
        public void UnpublishAllPackagesAsync() {
            this.UnpublishAllPackagesAsync(null);
        }
        
        /// <remarks/>
        public void UnpublishAllPackagesAsync(object userState) {
            if ((this.UnpublishAllPackagesOperationCompleted == null)) {
                this.UnpublishAllPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnpublishAllPackagesOperationCompleted);
            }
            this.InvokeAsync("UnpublishAllPackages", new object[0], this.UnpublishAllPackagesOperationCompleted, userState);
        }
        
        private void OnUnpublishAllPackagesOperationCompleted(object arg) {
            if ((this.UnpublishAllPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnpublishAllPackagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/GetPackage", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPackage(string packageName) {
            object[] results = this.Invoke("GetPackage", new object[] {
                        packageName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageAsync(string packageName) {
            this.GetPackageAsync(packageName, null);
        }
        
        /// <remarks/>
        public void GetPackageAsync(string packageName, object userState) {
            if ((this.GetPackageOperationCompleted == null)) {
                this.GetPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageOperationCompleted);
            }
            this.InvokeAsync("GetPackage", new object[] {
                        packageName}, this.GetPackageOperationCompleted, userState);
        }
        
        private void OnGetPackageOperationCompleted(object arg) {
            if ((this.GetPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageCompleted(this, new GetPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/LoginEx", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoginResult LoginEx(string name, string password, string apiVersion) {
            object[] results = this.Invoke("LoginEx", new object[] {
                        name,
                        password,
                        apiVersion});
            return ((LoginResult)(results[0]));
        }
        
        /// <remarks/>
        public void LoginExAsync(string name, string password, string apiVersion) {
            this.LoginExAsync(name, password, apiVersion, null);
        }
        
        /// <remarks/>
        public void LoginExAsync(string name, string password, string apiVersion, object userState) {
            if ((this.LoginExOperationCompleted == null)) {
                this.LoginExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginExOperationCompleted);
            }
            this.InvokeAsync("LoginEx", new object[] {
                        name,
                        password,
                        apiVersion}, this.LoginExOperationCompleted, userState);
        }
        
        private void OnLoginExOperationCompleted(object arg) {
            if ((this.LoginExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginExCompleted(this, new LoginExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/Login", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoginResult Login(string name, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        name,
                        password});
            return ((LoginResult)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string name, string password) {
            this.LoginAsync(name, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string name, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        name,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://acumatica.com/Logout", RequestNamespace="http://acumatica.com", ResponseNamespace="http://acumatica.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout() {
            this.Invoke("Logout", new object[0]);
        }
        
        /// <remarks/>
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        /// <remarks/>
        public void LogoutAsync(object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[0], this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GraphServerStub))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://acumatica.com")]
    public abstract partial class GraphObject {
        
        private View[] customViewsField;
        
        private GraphObjectState graphStateField;
        
        private GraphUpdateMode updateModeField;
        
        private PXLongRunStatus processStatusField;
        
        private string logField;
        
        /// <remarks/>
        public View[] CustomViews {
            get {
                return this.customViewsField;
            }
            set {
                this.customViewsField = value;
            }
        }
        
        /// <remarks/>
        public GraphObjectState GraphState {
            get {
                return this.graphStateField;
            }
            set {
                this.graphStateField = value;
            }
        }
        
        /// <remarks/>
        public GraphUpdateMode UpdateMode {
            get {
                return this.updateModeField;
            }
            set {
                this.updateModeField = value;
            }
        }
        
        /// <remarks/>
        public PXLongRunStatus ProcessStatus {
            get {
                return this.processStatusField;
            }
            set {
                this.processStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://acumatica.com")]
    public partial class View {
        
        private int selectActionField;
        
        private int selectStartRowField;
        
        private int selectMaxRowsField;
        
        private int selectTotalRowsField;
        
        private object[] selectParametersField;
        
        private object[] selectSearchesField;
        
        private string[] selectSortColumnsField;
        
        private bool[] selectDescendingsField;
        
        private bool selectDiscardResultsField;
        
        private bool selectNativeRowsField;
        
        private object[] selectRowsField;
        
        private bool insertDiscardResultsField;
        
        private object[] insertRowsField;
        
        private bool updateDiscardResultsField;
        
        private object[] updateRowsField;
        
        private bool deleteDiscardResultsField;
        
        private object[] deleteRowsField;
        
        private WebDialogResult answerField;
        
        private string viewNameField;
        
        private bool queryCacheItemsField;
        
        private object[] cacheItemsField;
        
        private bool queryCacheInsertedField;
        
        private object[] cacheInsertedField;
        
        private bool queryCacheUpdatedField;
        
        private object[] cacheUpdatedField;
        
        private bool queryCacheDeletedField;
        
        private object[] cacheDeletedField;
        
        private bool querySelectAllRecordsField;
        
        private bool querySelectDefaultField;
        
        private bool queryCacheCurrentField;
        
        private object cacheCurrentField;
        
        private bool queryCacheItemsTranslatedField;
        
        private object[] cacheItemsTranslatedField;
        
        private string selectActionNameField;
        
        public View() {
            this.deleteDiscardResultsField = true;
        }
        
        /// <remarks/>
        public int SelectAction {
            get {
                return this.selectActionField;
            }
            set {
                this.selectActionField = value;
            }
        }
        
        /// <remarks/>
        public int SelectStartRow {
            get {
                return this.selectStartRowField;
            }
            set {
                this.selectStartRowField = value;
            }
        }
        
        /// <remarks/>
        public int SelectMaxRows {
            get {
                return this.selectMaxRowsField;
            }
            set {
                this.selectMaxRowsField = value;
            }
        }
        
        /// <remarks/>
        public int SelectTotalRows {
            get {
                return this.selectTotalRowsField;
            }
            set {
                this.selectTotalRowsField = value;
            }
        }
        
        /// <remarks/>
        public object[] SelectParameters {
            get {
                return this.selectParametersField;
            }
            set {
                this.selectParametersField = value;
            }
        }
        
        /// <remarks/>
        public object[] SelectSearches {
            get {
                return this.selectSearchesField;
            }
            set {
                this.selectSearchesField = value;
            }
        }
        
        /// <remarks/>
        public string[] SelectSortColumns {
            get {
                return this.selectSortColumnsField;
            }
            set {
                this.selectSortColumnsField = value;
            }
        }
        
        /// <remarks/>
        public bool[] SelectDescendings {
            get {
                return this.selectDescendingsField;
            }
            set {
                this.selectDescendingsField = value;
            }
        }
        
        /// <remarks/>
        public bool SelectDiscardResults {
            get {
                return this.selectDiscardResultsField;
            }
            set {
                this.selectDiscardResultsField = value;
            }
        }
        
        /// <remarks/>
        public bool SelectNativeRows {
            get {
                return this.selectNativeRowsField;
            }
            set {
                this.selectNativeRowsField = value;
            }
        }
        
        /// <remarks/>
        public object[] SelectRows {
            get {
                return this.selectRowsField;
            }
            set {
                this.selectRowsField = value;
            }
        }
        
        /// <remarks/>
        public bool InsertDiscardResults {
            get {
                return this.insertDiscardResultsField;
            }
            set {
                this.insertDiscardResultsField = value;
            }
        }
        
        /// <remarks/>
        public object[] InsertRows {
            get {
                return this.insertRowsField;
            }
            set {
                this.insertRowsField = value;
            }
        }
        
        /// <remarks/>
        public bool UpdateDiscardResults {
            get {
                return this.updateDiscardResultsField;
            }
            set {
                this.updateDiscardResultsField = value;
            }
        }
        
        /// <remarks/>
        public object[] UpdateRows {
            get {
                return this.updateRowsField;
            }
            set {
                this.updateRowsField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool DeleteDiscardResults {
            get {
                return this.deleteDiscardResultsField;
            }
            set {
                this.deleteDiscardResultsField = value;
            }
        }
        
        /// <remarks/>
        public object[] DeleteRows {
            get {
                return this.deleteRowsField;
            }
            set {
                this.deleteRowsField = value;
            }
        }
        
        /// <remarks/>
        public WebDialogResult Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        public string ViewName {
            get {
                return this.viewNameField;
            }
            set {
                this.viewNameField = value;
            }
        }
        
        /// <remarks/>
        public bool QueryCacheItems {
            get {
                return this.queryCacheItemsField;
            }
            set {
                this.queryCacheItemsField = value;
            }
        }
        
        /// <remarks/>
        public object[] CacheItems {
            get {
                return this.cacheItemsField;
            }
            set {
                this.cacheItemsField = value;
            }
        }
        
        /// <remarks/>
        public bool QueryCacheInserted {
            get {
                return this.queryCacheInsertedField;
            }
            set {
                this.queryCacheInsertedField = value;
            }
        }
        
        /// <remarks/>
        public object[] CacheInserted {
            get {
                return this.cacheInsertedField;
            }
            set {
                this.cacheInsertedField = value;
            }
        }
        
        /// <remarks/>
        public bool QueryCacheUpdated {
            get {
                return this.queryCacheUpdatedField;
            }
            set {
                this.queryCacheUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public object[] CacheUpdated {
            get {
                return this.cacheUpdatedField;
            }
            set {
                this.cacheUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public bool QueryCacheDeleted {
            get {
                return this.queryCacheDeletedField;
            }
            set {
                this.queryCacheDeletedField = value;
            }
        }
        
        /// <remarks/>
        public object[] CacheDeleted {
            get {
                return this.cacheDeletedField;
            }
            set {
                this.cacheDeletedField = value;
            }
        }
        
        /// <remarks/>
        public bool QuerySelectAllRecords {
            get {
                return this.querySelectAllRecordsField;
            }
            set {
                this.querySelectAllRecordsField = value;
            }
        }
        
        /// <remarks/>
        public bool QuerySelectDefault {
            get {
                return this.querySelectDefaultField;
            }
            set {
                this.querySelectDefaultField = value;
            }
        }
        
        /// <remarks/>
        public bool QueryCacheCurrent {
            get {
                return this.queryCacheCurrentField;
            }
            set {
                this.queryCacheCurrentField = value;
            }
        }
        
        /// <remarks/>
        public object CacheCurrent {
            get {
                return this.cacheCurrentField;
            }
            set {
                this.cacheCurrentField = value;
            }
        }
        
        /// <remarks/>
        public bool QueryCacheItemsTranslated {
            get {
                return this.queryCacheItemsTranslatedField;
            }
            set {
                this.queryCacheItemsTranslatedField = value;
            }
        }
        
        /// <remarks/>
        public object[] CacheItemsTranslated {
            get {
                return this.cacheItemsTranslatedField;
            }
            set {
                this.cacheItemsTranslatedField = value;
            }
        }
        
        /// <remarks/>
        public string SelectActionName {
            get {
                return this.selectActionNameField;
            }
            set {
                this.selectActionNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://acumatica.com")]
    public partial class LoginResult {
        
        private ErrorCode codeField;
        
        private string messageField;
        
        private string sessionField;
        
        /// <remarks/>
        public ErrorCode Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string Session {
            get {
                return this.sessionField;
            }
            set {
                this.sessionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://acumatica.com")]
    public enum ErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_CREDENTIALS,
        
        /// <remarks/>
        INTERNAL_ERROR,
        
        /// <remarks/>
        INVALID_API_VERSION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://acumatica.com")]
    public partial class RowServerStub {
        
        private string classNameField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        public string ClassName {
            get {
                return this.classNameField;
            }
            set {
                this.classNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://acumatica.com")]
    public enum WebDialogResult {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        Cancel,
        
        /// <remarks/>
        Abort,
        
        /// <remarks/>
        Retry,
        
        /// <remarks/>
        Ignore,
        
        /// <remarks/>
        Yes,
        
        /// <remarks/>
        No,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://acumatica.com")]
    public enum GraphObjectState {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Load,
        
        /// <remarks/>
        Unload,
        
        /// <remarks/>
        LoadUnload,
        
        /// <remarks/>
        Clear,
        
        /// <remarks/>
        ClearUnload,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://acumatica.com")]
    public enum GraphUpdateMode {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        InterfaceFields,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://acumatica.com")]
    public enum PXLongRunStatus {
        
        /// <remarks/>
        NotExists,
        
        /// <remarks/>
        InProcess,
        
        /// <remarks/>
        Completed,
        
        /// <remarks/>
        Aborted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://acumatica.com")]
    public partial class GraphServerStub : GraphObject {
        
        private string classNameField;
        
        /// <remarks/>
        public string ClassName {
            get {
                return this.classNameField;
            }
            set {
                this.classNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessCompletedEventHandler(object sender, ProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GraphObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GraphObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessBatchCompletedEventHandler(object sender, ProcessBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GraphObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GraphObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnumTablesCompletedEventHandler(object sender, EnumTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnumTablesExCompletedEventHandler(object sender, EnumTablesExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumTablesExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumTablesExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnumGraphsCompletedEventHandler(object sender, EnumGraphsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumGraphsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumGraphsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReportEnumNamesCompletedEventHandler(object sender, ReportEnumNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportEnumNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportEnumNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReportEnumTableNamesCompletedEventHandler(object sender, ReportEnumTableNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportEnumTableNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportEnumTableNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReportGetXmlCompletedEventHandler(object sender, ReportGetXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportGetXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportGetXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReportGetVersionXmlCompletedEventHandler(object sender, ReportGetVersionXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportGetVersionXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportGetVersionXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReportSaveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReportSaveVersionXmlCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReportSaveExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReportGetPreviewCompletedEventHandler(object sender, ReportGetPreviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportGetPreviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportGetPreviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetBusinessDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UploadPackageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PublishPackagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CleanupPublishCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UnpublishAllPackagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPackageCompletedEventHandler(object sender, GetPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoginExCompletedEventHandler(object sender, LoginExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoginResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoginResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoginResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoginResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591